load("@prelude//toolchains:cxx.bzl", "system_cxx_toolchain")
load("@prelude//toolchains:python.bzl", "system_python_bootstrap_toolchain")

system_cxx_toolchain(
    name = "cxx",
    visibility = ["PUBLIC"],
    link_style = "static",
    c_flags = select({
        #Copied from
        "config//os:windows": ["/c", "/Z7", "/nologo", "/W3", "/WX-", "/diagnostics:column", "/sdl", "/D_CONSOLE", "/D_UNICODE", "/DUNICODE", "/EHsc", "/Zc:forScope", "/Zc:inline", "/permissive-", "/TC"] + select({
            "root//buck2_utils/configuration:debug": ["/JMC", "/Od", "/D_DEBUG", "/RTC1", "/MDd"],
            "root//buck2_utils/configuration:release": ["/O2", "/Oi", "/GL", "/DNDEBUG", "/MD", "/Gy"],
        }),
        "config//os:linux": [],
    }),
    cxx_flags = select({
        #Added C++ 20 version flag
        #Removed flags that are already the default: /GS, /fp:precise /Gd /Zc:wchar_t /Gm-
        #Removed deprecated /errorReport:prompt
        #Converted /ZI to /Z7 because I'm guessing /ZI won't play very well with remote execution
        #Removed /FC because it probably doesn't work with remove execution
        #Removed /external:W3 because it's redundant
        "config//os:windows": ["/std:c++20", "/c", "/Z7", "/nologo", "/W3", "/WX-", "/diagnostics:column", "/sdl", "/D_CONSOLE", "/D_UNICODE", "/DUNICODE", "/EHsc", "/Zc:forScope", "/Zc:inline", "/permissive-", "/TP"] + select({
            "root//buck2_utils/configuration:debug": ["/JMC", "/Od", "/D_DEBUG", "/RTC1", "/MDd"],
            "root//buck2_utils/configuration:release": ["/O2", "/Oi", "/GL", "/DNDEBUG", "/MD", "/Gy"],
        }),
        "config//os:linux": ["-std=c++20"],
    }),
    link_flags = select({
        #Added /NODEFAULTLIB
        #Removed flags that are already the default: /TLBID:1 /DYNAMICBASE /NXCOMPAT /ERRORREPORT:PROMPT /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /SUBSYSTEM:CONSOLE
        #Removed /manifest:embed because I don't know what it does
        #Removed default extra libs that are unnecessary most of the time: kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib
        "config//os:windows": ["/NOLOGO", "/DEBUG"] + select({
            #Removed /INCREMENTAL because I'm guessing incremental actions won't work well with Buck2
            "root//buck2_utils/configuration:debug": [],
            #Converted /LTCG:incremental to /LTCG because I'm guessing incremental actions won't work well with Buck2
            "root//buck2_utils/configuration:release": ["/OPT:REF", "/OPT:ICF", "/LTCG"],
        }),
        "config//os:linux": [],
    }),
)

system_python_bootstrap_toolchain(
    name = "python_bootstrap",
    visibility = ["PUBLIC"],
)

configuration = read_config("cxx", "configuration", "debug")

platform(
    name = "default",
    deps = ["prelude//platforms:default"],
    constraint_values = ["root//buck2_utils/configuration/constraints:release"] if configuration == "release" else ["root//buck2_utils/configuration/constraints:debug"],
)
